#ABC302 結果
Rated ooooooox 58:19
89th perf.2400


A 0:53
 (a+b-1)/b

B 6:47
 重実装すぎる　どうやれば早く書けるんだこれ

C 9:56
 N!通り試す

D 16:13
 各Aiごとに、Ai+D以下の最大のBjを選ぶ にぶたん

E 21:20
 各辺の削除は高々1回なので愚直にやればいい。HashSetをN個持つ

F 30:59
 N+M要素のグラフにコスト0or1の有向辺を貼ると最短路問題になる
 集合側の頂点から属する数字側の頂点にコスト0（集合に居るなら好きな数字を選べる）
 数字側の頂点から包含する集合側の頂点にコスト1（新たな集合に行くならコストが掛かる）

G 58:19
 多分嘘w

 AをソートしたものをBとする (Ai, Bi)の組の個数をカウントする
 Ai==Biのものは無視
 (1,3)と(3,1)みたいな1手で2組そろうやつは嬉しいので全部やる

 残ったものは12~23~31みたいな3~4個セットの巡回にできて、セットの要素数-1手掛かる
 全体では「未解決の組の個数-巡回の個数」手必要で、巡回を多く作れるほどうれしい

 ここで最善の組合せでは、各巡回で同じ数字が2箇所で出ることはない
  （それより短い2つの巡回に分解できるため：12~23~34~42~23~31 → 12~23~31, 23~34~42）
 
 「同じ組は別の巡回に入る」「巡回は3or4個セット」という事実から、以下の怪しい考察が生える
　・巡回の個数の最大値 = 12種のうち最も多く残っている組の個数
   最も多く残っている組の個数をKとすると、そいつを全部巡回にした時点で3K~4K組消えるので、気持ち的に...

Ex -
 ググるとChokudai Speedrun 002-Kが出てくるので、考察フェーズは不要だった
 あとはUFをロールバックできればいいんだけど、実装ググるのが下手すぎて通せず
  （完全永続を見に行ってしまった）